config {
  type: "operations",
  schema: "bayes_ab",
  tags: ["asia-northeast1"],
  hasOutput: true,
}

CREATE OR REPLACE FUNCTION ${self()}
  (
    A_data STRUCT<sum INT64, count INT64>,
    B_data STRUCT<sum INT64, count INT64>,
    n_samples INT64,
    priors STRUCT<alpha FLOAT64, beta FLOAT64>,
    lift FLOAT64
  )
  AS (
    (
      WITH d AS (
        SELECT
          ${ref("random", "beta")}(A_data.sum + priors.alpha, A_data.count - A_data.sum + priors.beta) AS a,
          ${ref("random", "beta")}(B_data.sum + priors.alpha, B_data.count - B_data.sum + priors.beta) AS b,
          OFFSET
        FROM
          UNNEST(GENERATE_ARRAY(1, n_samples * 2)) WITH OFFSET
      ), lifts AS (
        SELECT
          (a - b) / b AS val
        FROM
          d
        WHERE
          a IS NOT NULL
          AND b IS NOT NULL
        QUALIFY
          ROW_NUMBER()OVER(ORDER BY OFFSET) <= n_samples
      )
      SELECT AS STRUCT
        COUNTIF(val > lift) / n_samples AS probability,
        IF(COUNT(*) = n_samples, NULL, "# of random numbers generated is not sufficient.")
      FROM
        lifts
    )
  )